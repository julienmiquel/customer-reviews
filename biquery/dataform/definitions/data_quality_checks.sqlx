config {
    type: "assertion",
    description: "Data quality checks for reviews and locations data"
}

-- Check for duplicate reviews
SELECT
    place_id,
    review_datetime,
    author,
    COUNT(*) as review_count
FROM ${ref("reviews_view")}
GROUP BY place_id, review_datetime, author
HAVING COUNT(*) > 1;

-- Check for invalid ratings
SELECT
    place_id,
    review_datetime,
    author,
    review_rating
FROM ${ref("reviews_view")}
WHERE review_rating < 0 OR review_rating > 5;

-- Check for missing coordinates
SELECT
    place_id,
    formatted_address,
    longitude,
    latitude
FROM ${ref("reviews_view")}
WHERE longitude IS NULL OR latitude IS NULL;

-- Check for empty or very short reviews
SELECT
    place_id,
    review_datetime,
    author,
    LENGTH(text) as text_length
FROM ${ref("reviews_view")}
WHERE text IS NULL OR LENGTH(text) <= 5;

-- Check for inconsistent location names
SELECT
    place_id,
    display_name,
    formatted_address
FROM ${ref("reviews_view")}
WHERE NOT display_name LIKE '%Burger%'
   OR NOT formatted_address LIKE '%France%';

-- Check for missing required fields in pros/cons analysis
SELECT
    r.place_id,
    r.review_datetime,
    r.author
FROM ${ref("reviews_view")} r
LEFT JOIN ${ref("reviews_pros_cons")} p
    ON r.place_id = p.place_id
    AND r.review_datetime = p.review_datetime
WHERE p.place_id IS NULL; 