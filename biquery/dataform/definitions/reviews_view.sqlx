config {
    type: "view",
    materialized: true,
    description: "A view containing Burger King reviews in France with location and review details",
    columns: {
        formatted_address: "The full address of the Burger King location",
        display_name: "The name of the Burger King location",
        overall_rating: "The average rating of the location",
        total_ratings: "Total number of ratings received",
        author: "Name of the review author",
        review_rating: "Individual review rating",
        text: "The review text content",
        review_datetime: "Timestamp of when the review was posted",
        longitude: "Longitude coordinate of the location",
        latitude: "Latitude coordinate of the location"
    },
    assertions: {
        uniqueKey: ["place_id", "review_datetime", "author"],
        rowConditions: [
            "overall_rating >= 0 AND overall_rating <= 5",
            "review_rating >= 0 AND review_rating <= 5",
            "longitude IS NOT NULL",
            "latitude IS NOT NULL"
        ]
    }
}

  -- This is an example SQLX file to help you learn the basics of Dataform.
  -- Visit https://cloud.google.com/dataform/docs/sql-workflows for more information on how to configure your SQL workflow.
  -- You can delete this file, then commit and push your changes to your repository when you are ready.
  -- Config blocks allow you to configure, document, and test your data assets.
  -- The rest of a SQLX file contains your SELECT statement used to create the table.
WITH DATA AS (
  SELECT
    DISTINCT 
    places.place_id,
    places.formatted_address,
    places.display_name,
    overall_rating,
    total_ratings,
    author,
    review_rating,
    text,
    TIMESTAMP_SECONDS(CAST(time_review AS INT64)) AS review_datetime,
    ST_X(places.location) AS longitude,
    ST_Y(places.location) AS latitude
  FROM
    `ml-demo-384110.burger_king_reviews_dataset.france_reviews_v2` AS france_reviews_v2,
    UNNEST(france_reviews_v2.reviews),
    `ml-demo-384110.burger_king_reviews_dataset.places_details_v2` AS places
  WHERE
    places.place_id = france_reviews_v2.place_id
    AND formatted_address LIKE '%France%'
    AND display_name LIKE '%Burger%'
    AND text IS NOT NULL
    AND LENGTH(text) > 5 )
  #select count(*) c from data
SELECT
  *
FROM
  DATA
  #select display_name, formatted_address, count(*) nb from data group by display_name, formatted_address order by nb desc
  #select * from data 
  #order by review_datetime desc
